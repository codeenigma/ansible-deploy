---

- name: Grab mysql credentials.
  fetch:
    src: "{{ database.credentials_file }}"
    dest: "build/mysql_backup_credentials.ini"
    flat: yes

# Credentials for "managing" databases.
- set_fact:
    _mysql_host: "{{ lookup('ini', 'host section=client file=build/mysql_backup_credentials.ini') }}"
- set_fact:
    _mysql_user: "{{ lookup('ini', 'user section=client file=build/mysql_backup_credentials.ini') }}"
- set_fact:
    _mysql_password: "{{ lookup('ini', 'password section=client file=build/mysql_backup_credentials.ini') }}"
# Credentials for the app itself.
# Manual: reuse given creds. Note the user gets ignored.
- set_fact:
    _mysql_build_user_name: "{{ _mysql_user }}"
  when: mysql_backup.credentials_handling == 'manual'
- set_fact:
    _mysql_build_password: "{{ _mysql_password }}"
  when: mysql_backup.credentials_handling == 'manual'
# Static: create/update user/pwd only once.
- set_fact:
    _mysql_build_user_name: "{{ database.user }}"
  when: mysql_backup.credentials_handling == 'static'
- set_fact:
    _mysql_build_password: "{{ lookup('password', '/etc/ansible/data/{{ inventory_hostname }}/mysql/{{ _mysql_host }}/{{ database.database }}') }}"
  when: mysql_backup.credentials_handling == 'static'
# Rotate: create user/pwd on each build.
- set_fact:
    _mysql_build_user_name: "{{ database.user }}_{{ build_number }}"
  when: mysql_backup.credentials_handling == 'rotate'
- set_fact:
    _mysql_build_password: "{{ lookup('password', '/dev/null') }}"
  when: mysql_backup.credentials_handling == 'rotate'

- include_tasks: "{{ mysql_backup.handling }}.yml"

# We append privileges instead of replacing,
# to allow this role to be looped over,
# for multisites or projects with multiple databases.
# @todo deal with host for user.
- name: Create/update mysql user.
  command: mysql --defaults-extra-file={{ database.credentials_file }} -e "GRANT ALL ON {{ _mysql_build_database_name }}.* TO '{{ _mysql_build_user_name}}'@'%' IDENTIFIED BY '{{ _mysql_build_password }}';"
  when: ( mysql_backup.credentials_handling == 'rotate' ) or ( mysql_backup.credentials_handling == 'static' )

- set_fact:
    _build_database:
      original: "{{ database }}"
      name: "{{ _mysql_build_database_name }}"
      user: "{{ _mysql_build_user_name }}"
      password: "{{ _mysql_build_password }}"
      host: "{{ _mysql_host }}"

- set_fact:
    build_databases: "{{ build_databases + [ _build_database ] }}"