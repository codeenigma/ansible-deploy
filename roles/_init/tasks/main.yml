---

# Ensure default values for common variables.
- name: Define deploy user.
  set_fact:
    deploy_user: "{{ deploy_user | default(deploy) }}"
- name: Define deploy base path.
  set_fact:
    deploy_base_path: "{{ deploy_base_path | default(/var/www) }}"
- name: Define mounted directory for assets.
  set_fact:
    deploy_assets_base_path: "{{ deploy_assets_base_path | default(/var/www/shared) }}"
- name: Define webroot.
  set_fact:
    webroot: "{{ webroot | default(www/) }}"
- name: Define build deploy path.
  set_fact:
    deploy_path: "{{ deploy_base_path }}/{{ project_name }}_{{ build_type }}_build_{{ build_number }}"


# Gather last known good build directly from symlink.
# This can happen:
# - when the first builds failed,
# and we don't have yet a succesful one
# - when the repository source changed and we lost track of
# the project
# - when the symlink has been manually messed up.

- name: Check if we have a live symlink.
  stat:
    path: "{{ live_symlink.live_symlink_dest }}"
  register: last_build_symlink

- name: Register current build.
  shell: "readlink {{ live_symlink.live_symlink_dest }} | grep -Po '{{ deploy_base_path }}/{{ project_name }}_{{ build_type }}_build_\\K([0-9]*)'"
  register: last_build
  when: last_build_symlink.stat.exists

# This is passed from caller.
- set_fact:
    previous_build_number: "{{ previous_known_build_number }}"

- set_fact:
    previous_build_number: "{{ last_build.stdout }}"
  when: 
    - last_build_symlink.stat.exists
    - previous_build_number == 0